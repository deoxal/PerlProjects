#!/usr/bin/env perl

#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/cpufreq
# Started On        - Sat  4 May 15:51:08 BST 2019
# Last Change       - Thu 26 Dec 20:56:08 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Display the current CPU core frequencies.
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use File::Basename 'basename';
use TFL; # <-- libtfl-perl (>= 2019-05-18)

# Really not needed in cpufreq.
no warnings 'uninitialized';

my $CurVer = "2019-12-26";
my $Progrm = basename($0);

while(defined($ARGV[0])){
	if($ARGV[0] =~ /^(--help|-h|-\?)$/){
		print("USAGE: $Progrm [[--help|-h|-?] | [--version|-v]]\n"); exit 0
	}elsif($ARGV[0] =~ /^(--version|-v)$/){
		print("$CurVer\n"); exit 0
	}else{
		TFL::Err(1, "Incorrect argument(s) specified")
	}

	shift(@ARGV)
}

TFL::Err(1, "Too many arguments provided.") if $#ARGV > 0;
if($ARGV[0] =~ /^(--help|-h|-\?)$/){
}elsif($ARGV[0] =~ /^(--version|-v)$/){
	print("$CurVer\n"); exit 0
}else{
	TFL::Err(1, "Incorrect argument(s) specified") if defined($ARGV[0])
}

my $ProcFile = '/proc/cpuinfo';
TFL::Err(1, "File '$ProcFile' not found.") unless -f $ProcFile;
TFL::Err(1, "Read access for '$ProcFile' is denied.") unless -r $ProcFile;

open(my $FH, '<', $ProcFile);

my $CoreCount = 0;
while(<$FH>){
	chomp(my @CurLine = split(':', $_));
	next unless $CurLine[0] =~ '^cpu MHz';

	$CoreCount++;
	printf("CORE_%d: %.3f\n", $CoreCount, $CurLine[1] =~ s/\s//gr)
}

close($FH)
