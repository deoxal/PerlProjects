#!/usr/bin/env perl
#cito M=755 O=0 G=0 T=/usr/bin/lspkg
#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/lspkg
# Started On        - Mon 23 Dec 15:26:46 GMT 2019
# Last Change       - Mon 23 Dec 23:05:05 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# A Perl rewrite of the shell project 'lspkg' and 'lspkg-set' written by TFL/LL.
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use File::Basename 'basename';
use TFL; # <-- libtfl-perl (>= 2019-05-18)
use List::MoreUtils 'uniq';

no warnings 'uninitialized';

my $CurVer = "2019-12-23";
my $Progrm = basename($0);

my $StatusFile = '/var/lib/dpkg/status';

sub Usage{
	my $Info = qq{            @{[uc($Progrm)]} ($CurVer)
		            Written by terminalforlife (terminalforlife\@yahoo.com)

		            ...

		SYNTAX:     $Progrm [OPTS] [PKG_1 [PKG_2] ...]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.

		FILE:       $StatusFile
	};

	print($Info =~ tr/\t//dr)
}

while(defined($ARGV[0])){
	if($ARGV[0] =~ '^(--help|-h|-\?)$'){
		Usage(); exit 0
	}elsif($ARGV[0] =~ '^(--version|-v)$'){
		print("$CurVer\n"); exit 0
	}elsif($ARGV[0] =~ '^-'){
		TFL::Err(1, "Incorrect argument(s) specified")
	}else{
		last
	}

	shift(@ARGV)
}

open(my $FH, '<', $StatusFile);

my (@PKGList, %PKGHash, $LastPKG);
while (<$FH>){
	chomp(my @Arr = split(': ', $_));
	next unless length($Arr[1]) > 1;

	if ($Arr[0] eq 'Package'){
		push(@PKGList, $Arr[1]);
		$LastPKG = $Arr[1]
	}elsif ($Arr[0] eq 'Status'){
		next unless $Arr[1] eq 'install ok installed'
	}elsif ($Arr[0] eq 'Description'){
		$PKGHash{$LastPKG} = $Arr[1]
	}
}

close($FH);

foreach (uniq(sort(@PKGList))){
	printf("%s - %s\n", $_, $PKGHash{$_})
}
