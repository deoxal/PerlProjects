#!/usr/bin/env bash

#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/devutils/gitsap.test
# Started On        - Wed 15 Jan 13:44:46 GMT 2020
# Last Change       - Wed 15 Jan 16:20:43 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Developer shell script for testing results of `gitsap`.
#----------------------------------------------------------------------------------

set -e
. /usr/lib/tflbp-sh/ChkDep
set +e

ChkDep tput mktemp perl sed sleep rm cp

Run="$HOME/GitHub/terminalforlife/Personal/PerlProjects/gitsap"
RealConfig="$HOME/.config/gitsap/config"
TestConfig=`mktemp`

cp "$RealConfig" "$TestConfig"

tput smcup
tput clear

SigHandler(){
	Sig=$1

	rm "$TestConfig" 2> /dev/null
	tput rmcup
	exit $1
}

trap SigHandler EXIT ABRT QUIT HUP TERM INT

SetVal(){ sed -ir "s|^$1=.*|$1=$2|" "$TestConfig" || exit 7; }

Execute(){
	Message=$1
	shift

	[ $# -gt 0 ] && printf '\e[0;37m%s\e[0m\n' "$@"

	# Obnoxious to differentiate from test script to program.
	for I in {3..0}; do
		for Color in '1;32' '0;31' '2;32' '0;31' '0;32' '0;31' '1;31'; do
			printf "\r\e[${Color}m%s\e[0m" $I "$Message"
			sleep 0.03s
		done
	done

	printf '\n\n'

	perl $Run --config "$TestConfig" "$@"
	printf '\nexit(\e[1;36m%d\e[0m)\n\n' $?

	# Keep the configuration file fresh for each execution.
	cp "$RealConfig" "$TestConfig"
}

#---------------------------------------------------------------------Test Commands

SetVal Compact false
Execute "Disabled 'Compact' key."

SetVal Compact true
Execute "Enabled 'Compact' key."

SetVal ShowSize false
Execute "Disable 'ShowSize' key."

SetVal ShowSize true
Execute "Enable 'ShowSize' key."

SetVal Target "$HOME/GitHub/terminalforlife/Personal/PerlProjects"
Execute "Set 'Target' key to one repository."

Execute "Set 'Target' key to one repository."

Execute 'Parseable output via OPT.' '--parseable'

SetVal Parseable true
Execute 'Parseable via configuration file.'

#----------------------------------------------------------------------------------

printf '\n'
read -n 1 -s -p 'Press any key to continue...'
