#!/usr/bin/env bash

#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/devutils/gitsap.test
# Started On        - Wed 15 Jan 13:44:46 GMT 2020
# Last Change       - Thu 16 Jan 20:05:21 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Developer shell script for testing results of `gitsap`.
#----------------------------------------------------------------------------------

set -e
. /usr/lib/tflbp-sh/Err
. /usr/lib/tflbp-sh/ChkDep
set +e

ChkDep tput mktemp perl sed sleep rm cp

Run="$HOME/GitHub/terminalforlife/Personal/PerlProjects/source/gitsap"
RealConfig="$HOME/.config/gitsap/config"
TestConfig=`mktemp`

printf -v Spaces '%*s' `tput cols` ' '
Bars=${Spaces// /-}

cp "$RealConfig" "$TestConfig"

tput smcup
tput clear

SigHandler(){
	Sig=$?

	rm "$TestConfig" 2> /dev/null
	tput rmcup
	exit $Sig
}

trap SigHandler EXIT ABRT QUIT HUP TERM INT

SetVal(){
	if [ $# -eq 0 -o $# -gt 2 ]; then
		Err 1 "Function 'SetVal()' needs at least one argument."
	else
		if [ -n "$2" ]; then
			sed -i "s|^$1=.*|$1=$2|" "$TestConfig" || exit 4
		else
			sed -i 's|^\('"$1"'=\).*|\1|' "$TestConfig" | head || exit 4
		fi
	fi
}

Execute(){
	tput clear

	Message=$1
	shift

	[ $# -gt 0 ] && printf '\e[0;37m%s\e[0m\n' "$@"

	# Obnoxious to differentiate from test script to program.
	for I in {3..0}; do
		for Color in '1;32' '0;31' '2;32' '0;31' '0;32' '0;31' '1;31'; do
			printf "\r\e[${Color}m%s\e[0m" $I "$Message"
			sleep 0.03s
		done
	done

	printf '\n\n'
	printf '%s\n' "$Bars"

	perl $Run --config "$TestConfig" "$@"
	ExitStatus=$?

	printf '%s\n' "$Bars"
	printf '\nexit(\e[1;36m%d\e[0m)\n\n' $ExitStatus

	# Keep the configuration file fresh for each execution.
	cp "$RealConfig" "$TestConfig"

	printf '\n'
	read -n 1 -s -p 'Press any key to continue...'
}

#---------------------------------------------------------------------Test Commands

SetVal Target NULL
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Default settings, including the 'Target' value."

SetVal Target '$HOME/GitHub/terminalforlife'
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Default settings, with a 'Target' value including a variable."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Default key settings, with valid 'Target' value."

SetVal Target
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Empty value of 'Target' key."

SetVal Target ' '
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set invalid 'Target' value."

SetVal Target "$HOME/GitHub/terminalforlife/"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "End 'Target' value with '/' character."

SetVal Target '/tmp'
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set valid but unlikely 'Target' value."

SetVal Target "/root"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set root (locked-down) directory for 'Target' value."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr 'i3Config'
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Use matching 'RegexStr' key value of (/i3Config/) in configuration file."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr '^i3Config$'
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Use non-matching 'RegexStr' key value of (/^i3Config$/) in configuration file."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Use matching 'RegexStr' value (/i3Config/) via the final argument." 'i3Config'

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Use non-matching 'RegexStr' key value (/^i3Config$/) via the final argument." '^iCfig$'

SetVal Target "$HOME/GitHub/terminalforlife/Personal/PerlProjects"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set 'Target' to within a repository tree."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_orange
Execute "Set 'Color_Symbol' to an invalid color value."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean 'X'
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set 'Char_Clean' to a valid character key."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean '_-'
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set 'Char_Clean' to an invalid (too long) character key."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo bright_yellow
SetVal Color_RepoDir bright_yellow
SetVal Color_Status bright_yellow
SetVal Color_Symbol bright_yellow
Execute 'Change all color keys to bright yellow.'

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact 'asdf'
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Set 'Compact' key to invalid value."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact false
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Disabled 'Compact' key."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize true
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Enable 'ShowSize' key."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch true
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Enable 'ShowBranch' key."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean true
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute "Enable 'OmitClean' key."

SetVal Target "$HOME/GitHub/terminalforlife"
SetVal ShowSize false
SetVal ShowBranch false
SetVal OmitClean false
SetVal RegexStr
SetVal Parseable false
SetVal Compact true
SetVal Char_Clean
SetVal Char_Fix
SetVal Char_Initial
SetVal Char_Leads
SetVal Char_New
SetVal Char_Removed
SetVal Char_Uncommitted
SetVal Char_Unknown
SetVal Char_Unstaged
SetVal Color_Repo red
SetVal Color_RepoDir red
SetVal Color_Status bright_white
SetVal Color_Symbol bright_red
Execute 'Parseable output via OPT.' '--parseable'

#----------------------------------------------------------------------------------

printf '\n'
read -n 1 -s -p 'Press any key to continue...'
