#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/gub
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/gub
# Started On        - Mon 16 Mar 03:18:44 GMT 2020
# Last Change       - Mon 16 Mar 05:04:55 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Administrative utility to [g]rab various [b]its of [u]ser information.
#
# Features:
#
#TODO: Approach HOME usage without du(1) command.
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   libtfl-perl (>= 2020-01-03)
#   perl (>= 5.22.1-9)
#------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use TFL 'Err';

no warnings 'uninitialized';

my $CurVer = '2020-03-16';

sub Usage{
	print(qq{Usage: $TFL::PROGNAME [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
	} =~ tr/\t//dr)
}

my ($EUID, $EGID, $Name, $UID, $GID, $HomeDir, $Shell);

while (defined($ARGV[0])){
	if ($ARGV[0] =~ '^(--help|-h)$'){
		Usage(); exit(0)
	}elsif ($ARGV[0] =~ '^(--version|-v)$'){
		print("$CurVer\n"); exit(0)
	}elsif ($ARGV[0] =~ '^-'){
		Err(1, "Incorrect option(s) specified.")
	}else{
		last
	}

	shift()
}

my $Target = $ARGV[0];
my $PwdFile = '/etc/passwd';

open(my $FH, '<', $PwdFile);

while (<$FH>){
	chomp(my @Line = split(':'));

	if ($Line[0] eq $Target){
		$UID = $Line[2];
		$GID = $Line[3];
		$HomeDir = $Line[5];
		$Shell = $Line[6];
		$Name = (split(',', $Line[4]))[0];
	}
}

close($FH);

my ($HomeMode, $HomeOwner, $HomeGroup) = (stat("/home/$Target"))[2,4,5];
$HomeMode = sprintf('%04o', $HomeMode & 07777);

chomp(my $HomeSize = (split(' ', `du -sh '$HomeDir'`))[0]);

my $SAAS = 'true' if -f "$HomeDir/.sudo_as_admin_successful";
my $XSessionErrs = 'true' if -f "$HomeDir/.xsession-errors";
my $XAuthority = 'true' if -f "$HomeDir/.Xauthority";
my $SSHDir = 'true' if -d "$HomeDir/.ssh";

print(qq{      Target User: $Target
        Full Name: $Name

     Real User ID: $UID
    Real Group ID: $GID

            Shell: $Shell

          HomeDir: $HomeDir
             Size: $HomeSize
             Mode: $HomeMode
            Owner: $HomeOwner
            Group: $HomeGroup

    Sudo as Admin: $SAAS
 X Session Errors: $XSessionErrs
      X Authority: $XAuthority
           SSHDir: $SSHDir
} =~ tr/\t//dr)
