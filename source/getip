#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/getip
#--------------------------------------------------------------------------
# Project Name      - PerlProjects/source/getip
# Started On        - Wed  8 May 14:35:49 BST 2019
# Last Change       - Sat  1 Feb 00:29:41 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#--------------------------------------------------------------------------
# Dependencies:
#
#   libnet-address-ip-local-perl (>= 0.1.2-3)
#   libtfl-perl (>= 2020-01-03)
#   libwww-perl (>= 6.15-1)
#   perl (>= 5.22.1-9)
#------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use TFL 'Err';

no warnings 'uninitialized';

my $CurVer = "2020-02-01";

my $Domain = 'https://whatismyipaddress.com';

sub Usage{
	print(qq{            @{[uc($TFL::PROGNAME)]} ($CurVer)
		            $TFL::AUTHOR

		            View your internal and/or external IP address.

		SYNTAX:     $TFL::PROGNAME [OPTS]

		OPTS:       --help|-h|-?            - Display this help information.
		            --version|-v            - Output the version datestamp.
		            --external|-e           - Omit the internal IP address.
		            --internal|-i           - Omit the external IP address.
		            --ip-only|-I            - Show only the IP address.

		SITE:       $Domain
	} =~ tr/\t//dr)
}

my $Internal = 'true';
my $External = 'true';
my $IntExtDetected = 0;
my $IntStr = 'Internal IP: ';
my $ExtStr = 'External IP: ';

while (defined($ARGV[0])){
	if ($ARGV[0] =~ '^(--help|-h|-\?)$'){
		Usage(); exit(0)
	}elsif ($ARGV[0] =~ '^(--version|-v)$'){
		print("$CurVer\n"); exit(0)
	}elsif ($ARGV[0] =~ '^(--internal|-i)$'){
		$IntExtDetected++; $Internal = 'true'; $External = 'false'
	}elsif ($ARGV[0] =~ '^(--external|-e)$'){
		$IntExtDetected++; $Internal = 'false'; $External = 'true'
	}elsif ($ARGV[0] =~ '^(--ip-only|-I)$'){
		$IntStr = ''; $ExtStr = ''
	}else{
		Err(1, "Incorrect option(s) specified")
	}

	shift()
}

Err(1, "Either '--internal|-i' or '--external|-e'.") if $IntExtDetected == 2;

if ($Internal eq 'true'){
	use Net::Address::IP::Local;

	print($IntStr . Net::Address::IP::Local->public() . "\n")
}

if ($External eq 'true'){
	use LWP::UserAgent;

	my $UA = LWP::UserAgent->new(
		'agent' => 'Mozilla/5.0',
		'max_redirect' => 1,
		'protocols_allowed' => ['http', 'https'],
		'timeout' => 3
	);

	my $Data = $UA->get($Domain);

	Err(1, 'Failed to acquire external IP address.')
		unless $Data->is_success() == 0;

	foreach (split("\n", $Data->decoded_content())){
		foreach (split(' ')){
			if (/[0-9]+\.[0-9]+\.[0-9]+\.[0-9]/){
				print($_ =~ s/(.*)<\/span>$/$ExtStr$1/r . "\n");
				exit(0)
			}
		}
	}
}
