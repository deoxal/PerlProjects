#!/usr/bin/env perl

#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/suptime
# Started On        - Wed 17 Apr 13:13:34 BST 2019
# Last Change       - Wed 15 Jan 16:25:58 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# A Perl rewrite of up() previously found in TFL .bash_functions.
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use TFL;

# Really not needed in suptime.
no warnings 'uninitialized';

my $_VERSION_ = "2019-05-09";

TFL::FAIL(1, __LINE__, "Too many arguments provided.") if $#ARGV > 0;
if($ARGV[0] =~ /^(--help|-h|-\?)$/){
	print("USAGE: suptime [[--help|-h|-?] | [--version|-v]]\n");
	exit 0
}elsif($ARGV[0] =~ /^(--version|-v)$/){
	print("$_VERSION_\n"); exit 0
}else{
	TFL::FAIL(1, __LINE__, "Incorrect argument(s) specified") if defined($ARGV[0])
}

my $FILE = '/proc/uptime';
TFL::FAIL(1, __LINE__, "File '$FILE' not found.") if not -f $FILE;
TFL::FAIL(1, __LINE__, "Read access for '$FILE' is denied.") if not -r $FILE;

open(my $FH, '<', $FILE);

while(<$FH>){
	my @ARRAY = split(" ", $_);
	my $HOUR = int($ARRAY[0] / 60 / 60);
	my $MIN = int($ARRAY[0] / 60 - ($HOUR * 60));

	# Use correct grammar.
	my $HOUR_S = "s";
	my $MIN_S = "s";
	$HOUR_S = '' if $HOUR <= 1;
	$MIN_S = '' if $MIN <= 1;

	printf(
		"UP: %d hour%s and %d minute%s.\n",
		$HOUR, $HOUR_S, $MIN, $MIN_S
	)
}

close($FH)
