#!/usr/bin/perl
#cito M:755 O:0 G:0 T:/usr/bin/janein
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/janein
# Started On        - Wed 28 Oct 17:26:51 GMT 2020
# Last Change       - Fri 30 Oct 16:57:12 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Programmable Yes/No GTK2 dialog for use in scripts.
#
# Test Results:
#
#   Linux Mint 18.3 (Cinnamon)             | PERFECT
#   Pop! OS 20.04 (GNOME3)                 | BAD
#   Ubuntu 18.04 (i3-wm)                   | PERFECT
#
# Features:
#
#TODO: Add error message for too-long a message.
#TODO: Add optional line-wrapping functionality, with correct alignment.
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   libglib-perl (>= 3:1.326-1build1)
#   libgtk2-perl (>= 2:1.24992-1build1)
#   perl (>= 5.26.1-6)
#------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use Getopt::Long 'GetOptions';
use Glib 'TRUE', 'FALSE';
use Gtk2 '-init';

my $CurVer = '2020-10-30';

my $Progrm = 'janein';
my $ProgrmFancy = 'JaNein';

sub Usage {
	print(qq{Usage: $Progrm [OPTS] [QUESTION]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  --do-frame               - Display a frame around the widgets.
		  --no-cmd [CMD]           - Run shell CMD when result is False.
		  --no-text [STR]          - Instead, use STR on False button.
		  --yes-cmd [CMD]          - Run shell CMD when result is True.
		  --yes-text [STR]         - Instead, use STR on True button.
		  -q, --quiet              - Omit returned True/False booleans.

		Button Text:

		  The True and False buttons ('Yes'/'No', by default) can each contain
		  a mnemonic, which can be denoted with an underscore ('_') prior to
		  the desired character.

		Examples:

		  janein -q 'Power system down?' && systemctl poweroff
		  janein --yes-text 'Accept' --no-text 'Deny' 'Allow user?' && ...
		  janein --yes-cmd 'systemctl suspend' 'Perform a system suspend?'
		  Q=\`janein 'Nap time?'\`; [ "\$Q" == 'True' ] && sleep 45m
	} =~ tr/\t//dr);
}

my $Hush = 'False';
my $DoFrame = 'False';
my $YesText = '_Yes';
my $NoText = '_No';
my $YesCMD = '';
my $NoCMD = '';

GetOptions(
	'h|help' => sub { Usage(); exit(0) },
	'v|version' => sub { print("$CurVer\n"); exit(0) },
	'do-frame' => sub {$DoFrame = 'True'},
	'no-cmd=s' => sub {$NoCMD = $_[1]},
	'no-text=s' => sub {$NoText = $_[1]},
	'q|quiet' => sub { $Hush = 'True' },
	'yes-cmd=s' => sub {$YesCMD = $_[1]},
	'yes-text=s' => sub {$YesText = $_[1]}
) or die("Usage: $Progrm --help\n");

my $Question = join(' ', @ARGV);
$Question ||  die("Question string missing");

sub Clicked {
	# Dereferencing the argument array sent to callback.
	my ($ExitStatus, $String) = @{$_[1]};

	print("$String\n") unless $Hush eq 'True';
	Gtk2::main_quit();

	system($YesCMD) if $String eq 'True';
	system($NoCMD) if $String eq 'False';

	exit($ExitStatus)
}

my $RootWin = Gtk2::Window->new();
	$RootWin->signal_connect('destroy' => sub {Gtk2::main_quit()});
	$RootWin->signal_connect('delete_event' => sub {return(0)});

	$RootWin->set_border_width(8);
	$RootWin->set_title($ProgrmFancy);
	$RootWin->set_default_size(280, 120);
	$RootWin->set_resizable(FALSE);
	$RootWin->set_decorated(TRUE);

my $VBox = Gtk2::VBox->new(FALSE, 4);
	$VBox->set_border_width(8);

# Putting HBoxButtons within HBoxMain in order to keep the buttons centered.
# This also affords me the ability to not need to pack the buttons into the Box
# with expand and fill enabled.
my $HBoxMain = Gtk2::HBox->new(FALSE, 4);
	$HBoxMain->set_size_request(10, 46);

my $HBoxButtons = Gtk2::HBox->new(FALSE, 4);
	$HBoxButtons->set_border_width(8);

my $Frame = Gtk2::Frame->new('Query');
	$Frame->set_border_width(8);

my $Label = Gtk2::Label->new();
	$Label->set_text($Question);
	$Label->set_max_width_chars(100);
	$Label->set_justify('center');
	$Label->set_line_wrap(FALSE);
	$Label->set_line_wrap_mode('word');

my $JaButton = Gtk2::Button->new($YesText);
	$JaButton->set_size_request(100, 60);
	$JaButton->signal_connect('clicked' => \&Clicked, [0, 'True']);

my $NeinButton = Gtk2::Button->new($NoText);
	$NeinButton->set_size_request(100, 60);
	$NeinButton->signal_connect('clicked' => \&Clicked, [1, 'False']);

$VBox->pack_start($Label, TRUE, TRUE, 4);
$VBox->pack_start($HBoxMain, FALSE, FALSE, 4);

$HBoxMain->pack_start($HBoxButtons, TRUE, FALSE, 4);

$HBoxButtons->pack_start($JaButton, TRUE, TRUE, 4);
$HBoxButtons->pack_start($NeinButton, TRUE, TRUE, 4);

if ($DoFrame eq 'True') {
	$Frame->add($VBox);

	$RootWin->add($Frame);
} else {
	$RootWin->add($VBox);
}

$RootWin->show_all();

Gtk2::main($ProgrmFancy)
