#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/clean-locales
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/clean-locales
# Started On        - Thu  9 May 21:32:57 BST 2019
# Last Change       - Wed 21 Oct 16:33:45 BST 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Dependencies:
#
#   libtfl-perl (>= 2020-01-03)
#   perl (>= 5.22.1-9)
#------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use TFL 'Err';
use File::Path 'remove_tree';

my $CurVer = "2020-01-31";

my $LocDir = '/usr/share/locale';

sub Usage{
	print(qq{            @{[uc($TFL::PROGNAME)]} ($CurVer)
		            $TFL::AUTHOR

		            Remove non-English localizations.

		SYNTAX:     $TFL::PROGNAME [OPTS]

		OPTS:       --help|-h|-?            - Display this help information.
		            --version|-v            - Output the version datestamp.
		            --dir|-d PATH           - Override default working path.

		FILES:      Non-English locales in '$LocDir' will be deleted.

		            Specifially, files ignored are:

		              en_*
		              locale.alias
	} =~ tr/\t//dr)
}

while (defined($ARGV[0])){
	if ($ARGV[0] =~ '^(--help|-h|-\?)$'){
		Usage(); exit(0)
	}elsif ($ARGV[0] =~ '^(--version|-v)$'){
		print("$CurVer\n"); exit(0)
	}elsif ($ARGV[0] =~ '^(--dir|-d)$'){
		shift();

		$LocDir = $ARGV[0]
	}else{
		Err(1, "Incorrect argument(s) specified")
	}

	shift()
}

Err(1, 'Root access is required') unless $< == 0;
Err(1, "Directory '$LocDir' doesn't exist.") unless -d $LocDir;

my $ErrCount = 0;

# $_[0] = The directory or file to process.
sub DelIt{
	sub ErrUpCount{
		print($_[0]);
		$ErrCount++
	}

	if (-d $_[0]){
		remove_tree($_[0], {safe => 1}) or ErrUpCount("$_[0]  [!]\n")
	}elsif (-f $_[0]){
		unlink($_[0]) or ErrUpCount("$_[0]  [!]\n")
	}else{
		ErrUpCount("$_[0]  [?]\n")
	}
}

foreach (glob("$LocDir/*")){
	DelIt($_) unless /^$LocDir\/(en_.*|locale\.alias)$/
}

exit(1) if $ErrCount > 0
