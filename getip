#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/getip
#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/getip
# Started On        - Wed  8 May 14:35:49 BST 2019
# Last Change       - Thu  2 Jan 23:37:25 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use File::Basename 'basename';
use TFL 'Err'; # <-- libtfl-perl (>= 2020-01-02)

my $CurVer = "2020-01-02";
my $Progrm = basename($0);

my $Domain = "https://whatismyipaddress.com";

sub Usage{
	my $INFO = qq{            @{[uc($Progrm)]} ($CurVer)
		            Written by terminalforlife <terminalforlife\@yahoo.com>

		            View your internal and/or external IP address.

		SYNTAX:     $Progrm [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --internal|-i           - Show only the internal IP address.
		            --external|-e           - Show only the external IP address.
		            --ip-only|-I            - Show only the IP address.

		SITE:       $Domain
	};

	print($INFO =~ tr/\t//dr)
}

my $Internal = 1;
my $External = 1;
my $IntExtDetected = 0;
my $IntStr = 'Internal IP: ';
my $ExtStr = 'External IP: ';

while(scalar(@ARGV) > 0){
	my $Arg = $ARGV[0];

	if($Arg =~ '^(--help|-h|-\?)$'){
		Usage(); exit 0
	}elsif($Arg =~ '^(--version|-v)$'){
		print("$CurVer\n"); exit 0
	}elsif($Arg =~ '^(--internal|-i)$'){
		$IntExtDetected++;
		$Internal = 1; $External = 0
	}elsif($Arg =~ '^(--external|-e)$'){
		$IntExtDetected++;
		$Internal = 0; $External = 1
	}elsif($Arg =~ '^(--ip-only|-I)$'){
		$IntStr = ''; $ExtStr = '';
	}else{
		Err(1, "Incorrect argument(s) specified")
	}

	shift(@ARGV)
}

Err(1, "Either '--internal|-i' or '--external|-e'.") if $IntExtDetected == 2;

if($Internal){
	use Net::Address::IP::Local; # <-- libnet-address-ip-local-perl

	print($IntStr . Net::Address::IP::Local->public() . "\n")
}

if($External){
	use LWP::UserAgent;

	my $UA = LWP::UserAgent->new();
	$UA->max_redirect(1);
	$UA->protocols_allowed(['http', 'https']);
	$UA->agent('Mozilla/5.0');

	my @Data = split("\n", $UA->get($Domain)->decoded_content());

	foreach(@Data){
		foreach(@{[split(' ', $_)]}){
			if($_ =~ /[0-9]+\.[0-9]+\.[0-9]+\.[0-9]/){
				print($_ =~ s/(.*)<\/span>$/$ExtStr$1/r . "\n");
				last
			}
		}
	}
}
