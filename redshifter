#!/usr/bin/env perl

#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/redshifter.pl
# Started On        - Fri 19 Apr 23:05:28 BST 2019
# Last Change       - Tue 31 Dec 00:25:26 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use TFL; # <-- libtfl-perl (>= 2019-12-14)

no warnings 'uninitialized';

my $CurVer = "2019-12-31";

my ($Temp, $GammasNow);
my $Buffer = "$ENV{HOME}/.config/redshifter.tmp";

mkdir("$ENV{HOME}/.config") unless -d "$ENV{HOME}/.config";

TFL::DepChk('redshift');

TFL::Err(1, "At least one argument is required.") if $#ARGV == -1;

# Example: GetSetValue('>', 6500) | GetSetValue('<')
# $_[0] = Whether to read ('<') or write ('>') to the file.
# $_[1] = The new gamma value (int) to set.
sub GetSetValue{
	open(my $FH, $_[0], $Buffer);

	print($FH "$_[1]\n") if $_[0] eq '>';
	chomp($GammasNow = <$FH>) if $_[0] eq '<';

	close($FH)
}

# Get current value if file available, else set default value.
GetSetValue('<') ? -f -r -w $Buffer : GetSetValue('>', 6500);

if($ARGV[0] =~ '^(--version|-v)$'){
	print("$CurVer\n")
}elsif($ARGV[0] =~ '^(--reset|-r)$'){
	GetSetValue('>', '6500');
	system('redshift -o -O 6500K')
}elsif($ARGV[0] =~ '^(--increment|-i)$'){
	$Temp = $GammasNow + $ARGV[1];

	TFL::Err(1, "Gamma setting '25000' is the highest.")
		unless $Temp <= 25000;

	GetSetValue('>', $Temp);
	system("redshift -o -O ${Temp}K")
}elsif($ARGV[0] =~ '^(--decrement|-d)$'){
	$Temp = $GammasNow - $ARGV[1];

	TFL::Err(1, "Gamma setting '1000' is the lowest.")
		unless $Temp >= 1000;

	GetSetValue('>', $Temp);
	system("redshift -o -O ${Temp}K")
}
