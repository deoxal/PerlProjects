#!/usr/bin/perl

#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/clean-locales
# Started On        - Thu  9 May 21:32:57 BST 2019
# Last Change       - Fri 13 Dec 21:08:12 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# NOTE: You may need also to install the 'libanyevent-i3-perl' DEB package.
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use File::Basename 'basename';
use File::Path 'remove_tree';
use TFL; # <-- libtfl-perl (>= 2019-05-07)

my $_VERSION_ = "2019-11-01";
my $_PROJECT_ = basename($0);

my $DIR = '/usr/share/locale';

sub USAGE{
	my $INFO = qq{            @{[uc($_PROJECT_)]} ($_VERSION_)
		            Written by terminalforlife <terminalforlife\@yahoo.com>

		            Remove non-English localizations.

		SYNTAX:     $_PROJECT_ [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --dir|-d PATH           - Process PATH instead of the default.

		FILES:      Non-English locales in '$DIR' will be deleted.

		            Specifially, files ignored are:

		              en_*
		              locale.alias
	};

	print($INFO =~ tr/\t//dr)
}

while(defined($ARGV[0])){
	if($ARGV[0] =~ /^(--help|-h|-\?)$/){
		USAGE(1); exit 0
	}elsif($ARGV[0] =~ /^(--version|-v)$/){
		print("$_VERSION_\n"); exit 0
	}elsif($ARGV[0] =~ /^(--dir|-d)$/){
		shift(@ARGV);

		$DIR = $ARGV[0]
	}else{
		TFL::FAIL(1, __LINE__, "Incorrect argument(s) specified")
	}

	shift(@ARGV)
}

TFL::FAIL(1, __LINE__, "Root access is required") unless $> == 0;
TFL::FAIL(1, __LINE__, "Directory '$DIR' doesn't exist.") if not -d $DIR;

my $ERR_COUNT = 0;

# $_[0] = The directory or file to process.
sub DelIt{
	sub Err{print($_[0]); $ERR_COUNT++}

	if(-d $_[0]){
		remove_tree($_[0], {safe => 1}) or Err("$_[0]  [!]\n")
	}elsif(-f $_[0]){
		unlink($_[0]) or Err("$_[0]  [!]\n")
	}else{
		Err("$_[0]  [?]\n")
	}
}

foreach(glob($DIR . '/*')){
	DelIt($_) if $_ !~ /^$DIR\/(en_.*|locale\.alias)$/;
}

exit(1) if $ERR_COUNT
