#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/clean-locales
#----------------------------------------------------------------------------------
# Project Name      - PerlProjects/clean-locales
# Started On        - Thu  9 May 21:32:57 BST 2019
# Last Change       - Fri  3 Jan 19:53:24 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

use strict;
use warnings;
use autodie;
use File::Basename 'basename';
use TFL 'FErr'; # <-- libtfl-perl (>= 2020-01-03)
use File::Path 'remove_tree';

my $CurVer = "2020-01-03";

my $LocDir = '/usr/share/locale';

sub Usage{
	my $Info = qq{            @{[uc($TFL::PROGNAME)]} ($CurVer)
		            $TFL::AUTHOR

		            Remove non-English localizations.

		SYNTAX:     $TFL::PROGNAME [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output only the version datestamp.
		            --dir|-d PATH           - Process PATH instead of the default.

		FILES:      Non-English locales in '$LocDir' will be deleted.

		            Specifially, files ignored are:

		              en_*
		              locale.alias
	};

	print($Info =~ tr/\t//dr)
}

while (scalar(@ARGV) > 0){
	my $Arg = $ARGV[0];

	if ($Arg =~ '^(--help|-h|-\?)$'){
		Usage(1); exit(0)
	}elsif ($Arg =~ '^(--version|-v)$'){
		print("$CurVer\n"); exit(0)
	}elsif ($Arg =~ '^(--dir|-d)$'){
		shift(@ARGV);

		$LocDir = $ARGV[0]
	}else{
		FErr(1, __LINE__, "Incorrect argument(s) specified")
	}

	shift(@ARGV)
}

FErr(1, __LINE__, "Root access is required") unless $< == 0;
FErr(1, __LINE__, "Directory '$LocDir' doesn't exist.") unless -d $LocDir;

my $ErrCount = 0;

# $_[0] = The directory or file to process.
sub DelIt{
	sub ErrUpCount{
		print($_[0])
		$ErrCount++
	}

	if (-d $_[0]){
		remove_tree($_[0], {safe => 1}) or ErrUpCount("$_[0]  [!]\n")
	}elsif (-f $_[0]){
		unlink($_[0]) or ErrUpCount("$_[0]  [!]\n")
	}

	ErrUpCount("$_[0]  [?]\n")
}

foreach (glob("$LocDir/*")){
	DelIt($_) unless /^$LocDir\/(en_.*|locale\.alias)$/
}

exit(1) if $ErrCount > 0
